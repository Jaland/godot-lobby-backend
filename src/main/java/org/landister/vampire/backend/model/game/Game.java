package org.landister.vampire.backend.model.game;

import java.util.List;
import java.util.Objects;

import org.bson.types.ObjectId;

import io.quarkus.mongodb.panache.PanacheMongoEntity;
import io.quarkus.mongodb.panache.common.MongoEntity;

/**
 * Saved Game State
 * @author Landister
 */

@MongoEntity(collection = "games", database = "vampire")
public class Game extends PanacheMongoEntity{

  ObjectId id;
  String name;
  boolean started = false;
  int minPlayers, maxPlayers;

  String owner;

  List<String> users = List.of();


  public String getIdHexString(){
    return id.toHexString();
  }

  // AutoGenerated
  

  public Game() {
  }

  public Game(ObjectId id, String name, boolean started, int minPlayers, int maxPlayers, String owner, List<String> users) {
    this.id = id;
    this.name = name;
    this.started = started;
    this.minPlayers = minPlayers;
    this.maxPlayers = maxPlayers;
    this.owner = owner;
    this.users = users;
  }

  public ObjectId getId() {
    return this.id;
  }

  public void setId(ObjectId id) {
    this.id = id;
  }

  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public boolean isStarted() {
    return this.started;
  }

  public boolean getStarted() {
    return this.started;
  }

  public void setStarted(boolean started) {
    this.started = started;
  }

  public int getMinPlayers() {
    return this.minPlayers;
  }

  public void setMinPlayers(int minPlayers) {
    this.minPlayers = minPlayers;
  }

  public int getMaxPlayers() {
    return this.maxPlayers;
  }

  public void setMaxPlayers(int maxPlayers) {
    this.maxPlayers = maxPlayers;
  }

  public String getOwner() {
    return this.owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public List<String> getUsers() {
    return this.users;
  }

  public void setUsers(List<String> users) {
    this.users = users;
  }

  public Game id(ObjectId id) {
    setId(id);
    return this;
  }

  public Game name(String name) {
    setName(name);
    return this;
  }

  public Game started(boolean started) {
    setStarted(started);
    return this;
  }

  public Game minPlayers(int minPlayers) {
    setMinPlayers(minPlayers);
    return this;
  }

  public Game maxPlayers(int maxPlayers) {
    setMaxPlayers(maxPlayers);
    return this;
  }

  public Game owner(String owner) {
    setOwner(owner);
    return this;
  }

  public Game users(List<String> users) {
    setUsers(users);
    return this;
  }

  @Override
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof Game)) {
            return false;
        }
        Game game = (Game) o;
        return Objects.equals(id, game.id) && Objects.equals(name, game.name) && started == game.started && minPlayers == game.minPlayers && maxPlayers == game.maxPlayers && Objects.equals(owner, game.owner) && Objects.equals(users, game.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, started, minPlayers, maxPlayers, owner, users);
  }

  @Override
  public String toString() {
    return "{" +
      " id='" + getId() + "'" +
      ", name='" + getName() + "'" +
      ", started='" + isStarted() + "'" +
      ", minPlayers='" + getMinPlayers() + "'" +
      ", maxPlayers='" + getMaxPlayers() + "'" +
      ", owner='" + getOwner() + "'" +
      ", users='" + getUsers() + "'" +
      "}";
  }

}